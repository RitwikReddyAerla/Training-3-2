======================
06-01-2025 (day - 1)
======================
HTML:-
HTML is a mark up language. It is not a programming language

JavaScript:-
JavaScript is a high-level language. It is a loosely typed language. It is a lightweight and scripting language.

High-level : understandable by both humans and computers
loosely typed : not many restrictions while writing the code
lightweight : means we dont need a compiler to run the js code. We can directly run with the                       	      help js virtual machine which is present in the web browsers. 
Scripting language : The code is read by interpreter directly.

Js applications:-
-web pages
-mobile apps
-smartwatch apps (using pebble js)
-gaming applications
-database (mongoDB)
-ex:- uber, walmart, godaddy

Varibles:-
varoables are containers/memory blocks  to store values.
types:
-var: it can be re-initialized and re-declared
-let: it can be re-initialized and cannot be re-declared
-const: it cannot be re-initialized and re-declared.

ex:= int a  = 10 // let b = 20 // const c = 30
		console.log(a, b, c) //python equivalent of printing output


-Js file can be created with ending "filename.js".

previously we only had var variable. To avoid re-declaration other variables were eventually created.

Datatypes:-
==========
-they can be used to mention what kind of data used in the variable.

Types:-
------
1.primitive : 	it can store single values.
	     	they are default
		String, number, Boolean, null, undefined

2.non-premitive : 	it can store multiple values.
	     		they are user defined
			functions, arrays, objects


1.String:
-Sequence of characters enclosed within double quotes/single quotes/backticks(``).
2.Number:
-It stores all the number datatypes such as integer, float values, etc..
3.Boolean:
-true or false
4.Undefined:
-any variable declared but not initialized.
5.numm:
-empty of object.

====================
07-01-2025 (day - 2)
====================

Operators:-
-operators are special type of symbols to perform some operations on operands.

ex:
2(operand1) *(symbol) 3(operand2)

*unary
*binary
*ternary

1.Arithmetic operator:-
-----------------------
+, - *, / , %, **, ++, --


concatenation : joining of two or more strings
typecasting : changing one datatype into another data type
NaN(not a number) : it is a special type number which is not legal in javascript

Increment:
1.pre-increment: it will increment the value by one before execution
1.post-increment: it will increment the value by one after execution


2.Assignment operator:
-----------------------
=, +=, -=, %=, *=
-relational operators always return Boolean values

3.Relational operators:-
------------------------
==, ===, !=, !==(strictly not equal to), >, >=, <, <=
diff btw == and ===
==: checks if the values of is equal
===: checks if the values and datatype is equal

4.Logical operators:-
----------------------
AND(&&) : it will return true only when both conditions are true else false
OR(||): it will return true if both conditions are true or any one condition is true
NOT(!): it will make true as false and false as true

Decision making statements:
-----------------------------
if : if block executes only when the condition is true
     we can give only one condition for if
if-else : this also 
else-if ladder
switch
ternary condition

Looping statements:-
--------------------
-looping statements are used to iterate the block of codes multiple times

1.for loop:
---------
-minimum iteration count of for loop is "0"
syntax:
for(initialization; condition; updation){
	//statements
}
2.while loop
------------
-minimum iteration count of while loop is "0"
syntax:
while(condition){
	//statement
	updation
}
3.do while:
-----------
-minimum iteration count of do while is "1"
syntax"
do{
	//statements
} while(condition)

==========================
08-01-2025 (day - 3)
=========================

Functions:-
--------------
-function is a block of code used to perform specific tasks
-functions can be reused for n number of times.

syntax:-
function function_name(optional parameters) //function declaration
	{
		//statements
	}
	function_name(arguments); //function calling

Note:- without calling the function body will never execute

=========================
09-01-2025 (day - 4)
=========================

Types of function:-
-----------------------------
1.Named function : function which is having a name to declare and to i
2.Ananymous function : function which dosent have a name to declare
						-ananymous function cannot be executed independently
3.Function expression : function declaration is assigned as a value to variable and the same function will be invoked with the help of 	variable
4.Immediate invoke function expression(IIFE) : once the function is created, immediately it should be invoked
							-it can only be executed only once
5.Arrow function : to concise the syntax of normal function.
syntax :- 
	()=>{}
-it is also similar to anonymuous function
6.Higher order function : 
-it is a function which accepts another function as a value/argument ot its parameter.

7.Callback function :-
-it is a function which is passed as a value/arguments to another function.

-closure:- colsure is a memory created by functions bundled together/functions nested with eachother by giving accessibility to the innermost functin to access the variables of outermost function.

Note :- current version of js is es14
es = ECMA Scripting
ECMA = european computer manufacturing association

return statement:-
-it will return either expression or variable to future used
implicit return :- returns without using a 'return' keyword manually
explicit return :- returns without using a 'return' keyword manually

=============================
11-01-2025 (day - 6)
=============================
Arrays:- 
********
- Array can store mulitple values within a single variable.
- collections of items / values.
- array can store homogenous values and heterogenous values.
syntax :-  [] 

ex :-  


map and forEach difference
map:- it is used to iterrate the values of an array one by one.
- it will return new Array from original array.

forEach :- it is sued to iterate the values of an array.
- if we return the value we will get "undefined".

methods in array:-
******************
push() , pop() , unshift() , shift() , reverse() , join()
concat()

what is object ?
- object is an entity which is used to store the values in the form of key &value pairs.
- Object is a physical entity which is having states(properties) and behaviours(method).

syntax :-  let obj = {};

notes: - Object based language  + OOPs

ex:-    let obj ={
                name:"Sam",
                age:25
                }

JSON :- Javascript object notation
- IT is used to transmit the data from client to server and server to client.

syntax :-  {
                "key":"value"
        }


- for json no need to store it inside variable
- both keys and values shoyuld be double quoted only except number.

ex:- {
    "name":"Sam",
    "age":25
}

extension for json file is ".json"

=============================
20-01-2025 (Day - 7)
=============================


Methods of json:-
1.JSON.stingify() :- it will convert js object into json object
2.JSON.parse() :- it will convert json object into js object

Web storages:-
=================
-it can store the data inside the browsers
-upto 10mb of data can be stored

1.local storages : 
--------------------
-it is a permanent data storage.
-it can store upto 10mb of data.
methods:-
---------
1.localStorage.setItem("key", "value")
2.localStorage.getItem("key")
3.localStorage.removeItem("key")
4.localStorage.clear()


2.session storages : 
-it is a temporary data storage.(more secure)
-it can store upto 5mb of data.
methods:-
---------
1.sessionStorage.setItem("key", "value")
2.sessionStorage.getItem("key")
3.sessionStorage.removeItem("key")
4.sessionStorage.clear()

=============================
21-01-25 and 22-01-25
============================

NOTE:-
JS is a synchronous (single threaded language)


Asynchronous:- making javascript to work multiple work simulataneously.

1.setTimeout() :- It is a web api used to perform asynchronous opeartion in certain timeoout.
synatx :-      setTimeout(callbackfn , timeout);
2.setInterval() :- It is a web api used to perform async operations for evry interval of specified time.
syntax :-    setInterval(callbackfn , timeinterval);

3.Promise (es6 feature):- It is an Object which represents eventual completion or failures of asynchronous operations.
        
        states of promise :-
        1.pending :-  still ongoing
        2.fulfilled:-  successfully completed
        3.rejected:- failueres
syntax :-   let p = new Promise((resolve , reject)=>{});

- for handling the promise we have a instance methods,
                1.then() :- it is used to handle successful data.
                2.catch() :- it is used to handle errors.
                3.finally() :- finally will execute for both success & failures once the promise settles.


4.Async & await
async:- this keyword makes synchronous function as asynchronous function and start to execute  promise

await:- this keyword will make the function to wait until promise completes

DOM (Document Object Model):=
==================================
-dom is a web api used to manipulate the html content.
-dom is used to add, remove, update the content the HTML document.

Methods of dom:
-------------------
1.document.getElementByID("");
2.document.getElementByClassName("");
3.document.getElementByTagName("");
4.document.getElementByName("");
5.document.querySelector("")
5.document.querySelectorAll("")

methods of DOM :-
*****************
1.document.getElementById("") :- this method is used to target the html element based on "id" attribute value.
                               - with id attribute we can select only one element(unique element).

2.document.getElementsByClassName("") :-this method is used to target the html element based on "class" attribute value.
                                       - with class attribute we can select multiple element with same class name.

3.document.getElementsByTagName(""):- this method is used to target the html element based on "TAGNAME".


4.document.getElementsByName(""):- This method is used to target the element based on "name" attribute.


// these below methods is used to target the elements based on css selectors.
5.document.querySelector("#id") :- this method selects only one element.

6.document.querySelectorAll(".class"):- this method selects multiple elements.


innerText :- this is a property used to add only text content.

innerHTML :- this is a property used to add content along with tags.


Events in javascript:-
**********************
- events are nothing but an action to perform on html elements.

- in the events we have click events , mouse events , key events.
click events :- onclick , ondblclick , onsubmit , onchange 
mouse events :- onmouseover , onmouseleave
key events :- keypress , keydown , keyup

note :- every event is going to generate one object caled as  "event object".
creation of elements dynamically from javascript:-
**************************************************
- to create an html element in javascript we use a method called as 
        "document.createElement("tag name")"

-in js , we can create a element , we can add a attribute from js itself
- attribute can be added with a method called as "setAttribute()"
- to remove attribute we have "removeAttribute()"

- the element which is craeted in js should be added to html document.
- to add this element we have a method called as "appendChild()".


Note:-
======
the default method in the form tag is "GET" method.


====================
30-01-2025
====================
Agenda:

Modules
Form validations

Modules :
=============
->Modules are like import/export code to another js files

 Named Modules : Definenly while importing should use the same name that you are defining exactly with in {} You can export as many modules of code that you want.

 Default Modules:  While importing can use any name that you want. You can export only one modules of code in one source file. You should use the default keyword while exporting.

=========================
 31-01-2025
=========================

what is ReactJS?
-JavaScript is having libraries and frameworks.

Libraries :- it is a collection of codes.
        -they are having less set of rules
        -reactjs, jquery, ember, etc...
        -these are used to develop small or moderate amount of applications.

Frameworks :- it is a collection of libraries.
        -they are having more set of rules.
        -angular, vuejs, pebble, etc...
        -ekart applications, banking apps, etc...

what is react?
-react is a js library to build rich user interface.
-react is faster because of "virtual dom".
-react follows component based approach.
-react follows unidirectional data flow.
-react follows both client-side rendering and server-side rendering.

-react was introduced in 2011 by facebook.
-later it was made open-source in 2013.
-it was created by Jordan Walke
-react is a free and platform independent.

what us virtual DOM?
-virtual dom is a virtual representation of a ui which is kept in a memory and later synced with real dom by using a library called "ReactDOM".

what is Recocialations?
-the process of updating the RealDOM with the virtual DOM is called as Reconcialation.

Installation of React application:-
***********************************
- install node js.
- install react application CLI(command line interface)
        -npm install create-react-app --globally
-install react app with foldername
        -npm init react-app myapp